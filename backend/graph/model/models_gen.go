// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CommentList struct {
	Comment       *PostComment    `json:"comment"`
	Likecomments  []*User         `json:"likecomments"`
	Replycomments []*ReplyComment `json:"replycomments"`
}

type ConversationDetails struct {
	ID             string `json:"id"`
	ConversationID string `json:"conversationID"`
	UserID         string `json:"userID"`
}

type Conversations struct {
	ID        string `json:"id"`
	User1id   string `json:"user1ID"`
	User2id   string `json:"user2ID"`
	CreatedAt string `json:"createdAt"`
	Group     bool   `json:"group"`
}

type ConversationsWMsg struct {
	Conversation  *Conversations `json:"conversation"`
	Messages      []*MsgWMedia   `json:"messages"`
	Interlocutor  *User          `json:"interlocutor,omitempty"`
	Interlocutors []*User        `json:"interlocutors,omitempty"`
}

type Friend struct {
	ID       string `json:"id"`
	UserID   string `json:"userID"`
	FriendID string `json:"friendID"`
}

type FriendList struct {
	Friend  *User   `json:"friend"`
	Mutuals []*User `json:"mutuals"`
}

type FriendRequest struct {
	ID          string `json:"id"`
	RequesterID string `json:"requesterID"`
	TargetID    string `json:"targetID"`
}

type Group struct {
	ID        string `json:"id"`
	Name      string `json:"name"`
	Privacy   string `json:"privacy"`
	Profile   string `json:"profile"`
	CreatedAt string `json:"createdAt"`
}

type GroupFiles struct {
	ID        string `json:"id"`
	GroupID   string `json:"groupID"`
	UserID    string `json:"userID"`
	Name      string `json:"name"`
	Type      string `json:"type"`
	URL       string `json:"url"`
	CreatedAt string `json:"createdAt"`
}

type GroupFilesList struct {
	Files    *GroupFiles `json:"files"`
	Uploader *User       `json:"uploader"`
}

type GroupInvited struct {
	ID      string `json:"id"`
	GroupID string `json:"groupID"`
	UserID  string `json:"userID"`
}

type GroupInvites struct {
	Group *Group `json:"group"`
	Admin *User  `json:"admin"`
}

type GroupJoin struct {
	ID      string `json:"id"`
	GroupID string `json:"groupID"`
	UserID  string `json:"userID"`
}

type GroupList struct {
	Group          *Group            `json:"group"`
	Members        []*User           `json:"members"`
	Admin          []*User           `json:"admin"`
	Posts          []*GroupPostList  `json:"posts"`
	Files          []*GroupFilesList `json:"files"`
	IsAdmin        bool              `json:"isAdmin"`
	IsMember       bool              `json:"isMember"`
	HasJoinRequest bool              `json:"hasJoinRequest"`
	HasInvited     bool              `json:"hasInvited"`
	JoinRequest    []*User           `json:"joinRequest"`
}

type GroupMembers struct {
	ID      string `json:"id"`
	GroupID string `json:"groupID"`
	UserID  string `json:"userID"`
	Role    string `json:"role"`
}

type GroupPost struct {
	ID        string `json:"id"`
	GroupID   string `json:"groupID"`
	UserID    string `json:"userID"`
	Content   string `json:"content"`
	CreatedAt string `json:"createdAt"`
	User      *User  `json:"user"`
}

type GroupPostList struct {
	Posts    *GroupPost     `json:"posts"`
	Medias   []string       `json:"medias"`
	Comments []*CommentList `json:"comments"`
	Likes    []*User        `json:"likes"`
}

type LikeComment struct {
	ID        string `json:"id"`
	CommentID string `json:"commentID"`
	UserID    string `json:"userID"`
	Liked     bool   `json:"liked"`
}

type Messages struct {
	ID             string `json:"id"`
	ConversationID string `json:"conversationID"`
	SenderID       string `json:"senderID"`
	Content        string `json:"content"`
	CreatedAt      string `json:"createdAt"`
	HasMedia       bool   `json:"hasMedia"`
}

type MsgWMedia struct {
	Message *Messages `json:"message"`
	Medias  []string  `json:"medias"`
}

type NewConversations struct {
	User1id string   `json:"user1ID"`
	User2id string   `json:"user2ID"`
	Group   bool     `json:"group"`
	Users   []string `json:"users"`
}

type NewFriend struct {
	UserID   string `json:"userID"`
	FriendID string `json:"friendID"`
}

type NewGroup struct {
	Name    string `json:"name"`
	Privacy string `json:"privacy"`
}

type NewGroupFiles struct {
	GroupID string `json:"groupID"`
	UserID  string `json:"userID"`
	Name    string `json:"name"`
	Type    string `json:"type"`
	URL     string `json:"url"`
}

type NewGroupPost struct {
	GroupID string `json:"groupID"`
	UserID  string `json:"userID"`
	Content string `json:"content"`
}

type NewLikeComment struct {
	CommentID string `json:"commentID"`
	UserID    string `json:"userID"`
	Liked     bool   `json:"liked"`
}

type NewMessages struct {
	ConversationID string `json:"conversationID"`
	SenderID       string `json:"senderID"`
	Content        string `json:"content"`
	HasMedia       bool   `json:"hasMedia"`
}

type NewNotification struct {
	UserID  string `json:"userID"`
	User2id string `json:"user2ID"`
	Notif   string `json:"notif"`
}

type NewPost struct {
	UserID   string `json:"userID"`
	Privacy  string `json:"privacy"`
	Content  string `json:"content"`
	UserName string `json:"userName"`
}

type NewPostComment struct {
	PostID  string `json:"postID"`
	UserID  string `json:"userID"`
	Comment string `json:"comment"`
}

type NewPostLike struct {
	PostID string `json:"postID"`
	UserID string `json:"userID"`
	Liked  bool   `json:"liked"`
}

type NewPostMedia struct {
	PostID string `json:"postID"`
	Media  string `json:"media"`
}

type NewReels struct {
	Video  string `json:"video"`
	Text   string `json:"text"`
	UserID string `json:"userID"`
}

type NewReplyComment struct {
	CommentID string `json:"commentID"`
	UserID    string `json:"userID"`
	Reply     string `json:"reply"`
}

type NewRequest struct {
	RequesterID string `json:"requesterID"`
	TargetID    string `json:"targetID"`
}

type NewStory struct {
	UserID  string `json:"userID"`
	Image   string `json:"image"`
	Text    string `json:"text"`
	BgColor string `json:"bgColor"`
}

type NewUser struct {
	Email     string `json:"email"`
	Firstname string `json:"firstname"`
	Surname   string `json:"surname"`
	Dob       string `json:"dob"`
	Gender    string `json:"gender"`
	Password  string `json:"password"`
	Activated bool   `json:"activated"`
}

type NotifListWCount struct {
	NotifLists   []*NotificationList `json:"notifLists"`
	NotReadCount int                 `json:"notReadCount"`
}

type Notification struct {
	ID        string `json:"id"`
	UserID    string `json:"userID"`
	User2id   string `json:"user2ID"`
	Notif     string `json:"notif"`
	CreatedAt string `json:"createdAt"`
	IsRead    bool   `json:"isRead"`
}

type NotificationList struct {
	User2 *User         `json:"user2"`
	Notif *Notification `json:"notif"`
}

type Post struct {
	ID        string `json:"id"`
	UserID    string `json:"userID"`
	UserName  string `json:"userName"`
	Content   string `json:"content"`
	Privacy   string `json:"privacy"`
	CreatedAt string `json:"createdAt"`
	User      *User  `json:"user"`
}

type PostComment struct {
	ID        string `json:"id"`
	PostID    string `json:"postID"`
	UserID    string `json:"userID"`
	Comment   string `json:"comment"`
	User      *User  `json:"user"`
	CreatedAt string `json:"createdAt"`
}

type PostLike struct {
	ID     string `json:"id"`
	PostID string `json:"postID"`
	UserID string `json:"userID"`
	Liked  bool   `json:"liked"`
}

type PostList struct {
	Posts    *Post          `json:"posts"`
	Medias   []string       `json:"medias"`
	Comments []*CommentList `json:"comments"`
	Likes    []*User        `json:"likes"`
}

type PostMedia struct {
	ID     string `json:"id"`
	PostID string `json:"postID"`
	Media  string `json:"media"`
}

type Reels struct {
	ID     string `json:"id"`
	Video  string `json:"video"`
	Text   string `json:"text"`
	UserID string `json:"userID"`
}

type ReelsList struct {
	Reels    *Reels         `json:"reels,omitempty"`
	User     *User          `json:"user"`
	Comments []*CommentList `json:"comments"`
	Likes    []*User        `json:"likes"`
}

type ReplyComment struct {
	ID        string `json:"id"`
	CommentID string `json:"commentID"`
	UserID    string `json:"userID"`
	Reply     string `json:"reply"`
	CreatedAt string `json:"createdAt"`
	User      *User  `json:"user"`
}

type RequestList struct {
	Requests  *FriendRequest `json:"requests"`
	Requester *UserNMutual   `json:"requester"`
}

type Story struct {
	ID        string `json:"id"`
	UserID    string `json:"userID"`
	Image     string `json:"image"`
	Text      string `json:"text"`
	BgColor   string `json:"bgColor"`
	CreatedAt string `json:"createdAt"`
}

type StoryList struct {
	Stories []*Story `json:"stories"`
	User    *User    `json:"user"`
}

type UserNMutual struct {
	User             *User   `json:"user"`
	Mutuals          []*User `json:"mutuals"`
	HasFriendRequest bool    `json:"hasFriendRequest"`
	HasSentRequest   bool    `json:"hasSentRequest"`
}

type UserWRequest struct {
	User             *User `json:"user"`
	HasFriendRequest bool  `json:"hasFriendRequest"`
	HasSentRequest   bool  `json:"hasSentRequest"`
	IsFriend         bool  `json:"isFriend"`
}
